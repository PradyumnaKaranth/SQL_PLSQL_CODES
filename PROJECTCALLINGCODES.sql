SET SERVEROUTPUT ON;
DECLARE
V_Vehiclereg_id VEHICLE_DETAILS.Vehiclereg_id%TYPE;
V_USERID USERLOGIN_DETAILS.Vehiclereg_number%TYPE; 
V_USERPASSWORD USERLOGIN_DETAILS.User_password%TYPE;
V_RESULTFINAL BOOLEAN;
BEGIN
V_Vehiclereg_id:='&VEHICLEREGID';                 
V_USERID:='&USERID';
V_USERPASSWORD:='&USERPASSWORD';
V_RESULTFINAL:=VEHICLE_DETAILCLIENT_UTIL.USER_LOGIN_VALIDATION(V_Vehiclereg_id,V_USERID,V_USERPASSWORD);              /*validating the user login credentials*/
IF V_RESULTFINAL=TRUE THEN
DBMS_OUTPUT.PUT_LINE('VEHICLE INFORMATION DISPLAYED');
VEHICLE_DETAILCLIENT_UTIL.VEHICLEINFO(V_Vehiclereg_id);                                     /*calling procedure to display vehicle details*/
ELSE
DBMS_OUTPUT.PUT_LINE('PROBLEM IN DISPLAYING VEHICLE INFORMATION');
END IF;
END;



SET SERVEROUTPUT ON;
DECLARE
          V_RTOADMINIDINP RTOLOGIN_DETAILS.RTOadmin_id%TYPE;
          V_RTOUSERIDINP RTOLOGIN_DETAILS.RTOuser_id%TYPE;
          V_RTOPASSWORDINP RTOLOGIN_DETAILS.RTO_password%TYPE;
          V_Vehiclereg_id VEHICLE_DETAILS.Vehiclereg_id%TYPE;
          V_Vehicle_owner VEHICLE_DETAILS.Vehicle_owner%TYPE;
          V_Vehicle_name VEHICLE_DETAILS.Vehicle_name%TYPE;
          V_Vehicle_model VEHICLE_DETAILS.Vehicle_model%TYPE;
          V_Fuel_norms VEHICLE_DETAILS.Fuel_norms%TYPE;
          V_Rc_number VEHICLE_DETAILS.Rc_number%TYPE;
          V_INSUREXPDATE VEHICLE_DETAILS.Insurance_upto_date%TYPE;
          V_EMISSIONEXPDATE VEHICLE_DETAILS.Emission_upto_date%TYPE;
          V_RESULTFINAL2 BOOLEAN;
          result boolean := false;
          update_status boolean := false;
          RTOUPDATION_EXCEPTION EXCEPTION;
BEGIN
V_RTOADMINIDINP:='&V_RTOADMINIDINP';
V_RTOUSERIDINP:='&V_RTOUSERIDINP';
V_RTOPASSWORDINP:='&V_RTOPASSWORDINP';
V_RESULTFINAL2:=VEHICLE_INFO_UPDATE.RTO_LOGIN_VALIDATION(V_RTOADMINIDINP,V_RTOUSERIDINP,V_RTOPASSWORDINP);  /*rto login validation*/
IF V_RESULTFINAL2=TRUE THEN
DBMS_OUTPUT.PUT_LINE('SUCCESSFUL LOGIN');
V_Vehiclereg_id:='&V_Vehiclereg_id';
V_Vehicle_owner:='&V_Vehicle_owner';
V_Vehicle_name:='&V_Vehicle_name';
V_Vehicle_model:='&V_Vehicle_model';
V_Fuel_norms:='&V_Fuel_norms';
V_Rc_number:='&V_Rc_number';
V_INSUREXPDATE:='&V_INSUREXPDATE';
V_EMISSIONEXPDATE:='&V_EMISSIONEXPDATE';
VEHICLE_INFO_UPDATE.VEHICLEINFO_UPDATE_BYRTO(V_Vehiclereg_id,V_Vehicle_owner,V_Vehicle_name,V_Vehicle_model,V_Fuel_norms,V_Rc_number,V_INSUREXPDATE,V_EMISSIONEXPDATE,update_status);           /* calling procedure to update the vehicle details by RTO*/
IF update_status THEN
DBMS_OUTPUT.PUT_LINE('VEHICLE DETAILS INSERTED BY THE RTO ADMIN SUCCESSFULLY');
ELSE
RAISE RTOUPDATION_EXCEPTION;
END IF;
ELSE
DBMS_OUTPUT.PUT_LINE('LOGIN  FAILED');
END IF;
EXCEPTION
WHEN RTOUPDATION_EXCEPTION THEN 
DBMS_OUTPUT.PUT_LINE('PROBLEM IN UPDATING DATA BY RTO');
END; 





SET SERVEROUTPUT ON;
DECLARE
          V_INSURANCECOMPANYADMINID INSURANCECOMPANY_DETAILS.Insurancecompanyadmin_id%TYPE;
          V_INSURUSERIDINP INSURANCECOMPANYLOGIN_DETAILS.Insurancecompanyuser_id%TYPE;
          V_INSURPASSINP INSURANCECOMPANYLOGIN_DETAILS.Insurancecompany_password%TYPE;
          V_VEHICLEREGID3 INSURANCECOMPANY_DETAILS.Vehiclereg_id%TYPE;
          V_INSURANCEEXPIRY VEHICLE_DETAILS.Insurance_upto_date%TYPE;
          V_RESULTFINAL3 BOOLEAN;
          result boolean := false;
          update_status boolean := false;
          INSURUPDATION_EXCEPTION EXCEPTION;
BEGIN
V_INSURANCECOMPANYADMINID :='&V_INSURANCECOMPANYADMINID';
V_INSURUSERIDINP:='&V_INSURUSERIDINP';
V_INSURPASSINP:='&V_INSURPASSINP';
V_RESULTFINAL3:=VEHICLE_INFO_UPDATE.INSURANCE_LOGIN_VALIDATION(V_INSURANCECOMPANYADMINID,V_INSURUSERIDINP,V_INSURPASSINP);            /*VALIDATION OF INSURANCE ADMIN LOGIN CREDENTIALS*/
IF V_RESULTFINAL3=TRUE THEN
DBMS_OUTPUT.PUT_LINE('SUCCESSFUL LOGIN'); 
V_VEHICLEREGID3:='&V_Vehiclereg_id';
V_INSURANCEEXPIRY:='&V_Insurancevaliduptodate';

VEHICLE_INFO_UPDATE.VEHICLEINFO_UPDATE_BYINSURCOMP(V_VEHICLEREGID3,V_INSURANCECOMPANYADMINID,V_INSURANCEEXPIRY,update_status);         /*VEHICLE DETAILS UPDATION BY INSURANCE COMPANY ADMIN*/
IF update_status THEN
DBMS_OUTPUT.PUT_LINE('VEHICLE INSURANCE DETAILS INSERTED BY THE INSURANCE COMPANY ADMIN SUCCESSFULLY');
ELSE
RAISE INSURUPDATION_EXCEPTION;
END IF;
ELSE
DBMS_OUTPUT.PUT_LINE('LOGIN  FAILED');
END IF;
EXCEPTION
WHEN INSURUPDATION_EXCEPTION THEN
DBMS_OUTPUT.PUT_LINE('PROBLEM IN UPDATING DATA BY INSURANCE COMPANY');
END; 


SET SERVEROUTPUT ON;
DECLARE
          V_EMISSIONTESTCENTERADMINID EMISSIONTESTCENTER_DETAILS.Emissiontestcenteradmin_id%TYPE;
          V_EMISUSERIDINP EMISSIONCENTERLOGIN_DETAILS.Emissiontestcenteruser_id%TYPE;
          V_EMISUSERPASSINP EMISSIONCENTERLOGIN_DETAILS.Emissiontestcenter_password%TYPE;
          V_VEHICLEREGID4 EMISSIONTESTCENTER_DETAILS.Vehiclereg_id%TYPE;
          V_EMISSIONEXPDATE VEHICLE_DETAILS.Emission_upto_date%TYPE;
          V_RESULTFINAL4 BOOLEAN;
          result boolean := false;
          update_status boolean := false;
          EMISUPDATION_EXCEPTION EXCEPTION;
BEGIN
V_EMISSIONTESTCENTERADMINID:='&V_EMISSIONTESTCENTERADMINID';
V_EMISUSERIDINP:='&V_EMISUSERIDINP';
V_EMISUSERPASSINP:='&V_EMISUSERPASSINP';
V_RESULTFINAL4:=VEHICLE_INFO_UPDATE.EMISSION_LOGIN_VALIDATION(V_EMISSIONTESTCENTERADMINID,V_EMISUSERIDINP,V_EMISUSERPASSINP);   /*VALIDATION OF EMISSION COMPANY LOGIN CREDENTIALS*/
IF V_RESULTFINAL4=TRUE THEN
DBMS_OUTPUT.PUT_LINE('SUCCESSFUL LOGIN');  
V_VEHICLEREGID4:='&V_Vehiclereg_id';
V_EMISSIONEXPDATE:='&V_Emissionreportvaliduptodate';

VEHICLE_INFO_UPDATE.VEHICLEINFO_UPDATE_BYEMISCOMP(V_VEHICLEREGID4,V_EMISSIONTESTCENTERADMINID,V_EMISSIONEXPDATE,update_status);  /*VEHICLE DETAILS UPDATION BY EMISSION COMPANY ADMIN*/
IF update_status THEN
DBMS_OUTPUT.PUT_LINE('VEHICLE EMISSION TEST DETAILS INSERTED BY THE EMISSION TEST COMPANY ADMIN SUCCESSFULLY');
ELSE
RAISE EMISUPDATION_EXCEPTION;
END IF;
ELSE
DBMS_OUTPUT.PUT_LINE('LOGIN  FAILED');
END IF;
EXCEPTION
WHEN EMISUPDATION_EXCEPTION THEN
DBMS_OUTPUT.PUT_LINE('PROBLEM IN UPDATING DATA BY EMISSION TEST COMPANY');
END; 


















